#include <avr/io.h>
#include <util/delay.h>

#include "display.h"

void Display::transmit(unsigned int v) const
{
    PORTA = v >> 8;
    PORTC = v;
    PORTG &= ~_BV(2); // WR=LOW
    PORTG |= _BV(2); // WR=HIGH
}

void Display::command(unsigned int id) const
{
    PORTD &= ~_BV(7); // RS=LOW
    transmit(id);
}

void Display::command(unsigned int id, unsigned int d) const
{
    command(id);
    data(d);
}

void Display::data(unsigned int d) const
{
    PORTD |= _BV(7); // RS=HIGH
    transmit(d);
}

void Display::address(unsigned int x1, unsigned int y1, unsigned int x2, unsigned int y2) const
{
    // CASET: Column Address Set
    command(0x2A00);
	data(x1 >> 8);
    command(0x2A01);
	data(x1);
    command(0x2A02);
	data(x2 >> 8);
    command(0x2A03);
	data(x2);
    // RASET: Row Address Set
    command(0x2B00);
	data(y1 >> 8);
    command(0x2B01);
	data(y1);
    command(0x2B02);
	data(y2 >> 8);
    command(0x2B03);
	data(y2);
    // RAMWR: Memory Write
	command(0x2C00);
}

void Display::initialize(Orientation orientation)
{
    if (orientation == Orientation::PORTRAIT) {
        width_ = 480;
        height_ = 800;
    } else {
        width_ = 800;
        height_ = 480;
    }

    // MAUCCTR: Manufacture Command Set
    command(0xF000, 0x55);
    command(0xF001, 0xAA);
    command(0xF002, 0x52);
    command(0xF003, 0x08); // enable page 1
    command(0xF004, 0x01);
    // BT1CTR: BT1 Power Control for AVDD
    command(0xB600, 0x34);
    command(0xB601, 0x34);
    command(0xB602, 0x34);
    // SETAVDD: Setting AVDD Voltage
    command(0xB000, 0x0D);
    command(0xB001, 0x0D);
    command(0xB002, 0x0D);
    // BT2CTR: BT2 Power Control for AVEE
    command(0xB700, 0x24);
    command(0xB701, 0x24);
    command(0xB702, 0x24);
    // SETAVEE: Setting AVEE Voltage
    command(0xB100, 0x0D);
    command(0xB101, 0x0D);
    command(0xB102, 0x0D);
    // BT3CTR: BT3 Power Control for VCL
    command(0xB800, 0x24);
    command(0xB801, 0x24);
    command(0xB802, 0x24);
    // SETVCL: Setting VCL Voltage
    command(0xB200, 0x00);
    // BT4CTR: BT4 Power Control for VGH
    command(0xB900, 0x24);
    command(0xB901, 0x24);
    command(0xB902, 0x24);
    // DPCKRGB: Display Clock in RGB Interface
    command(0xB300, 0x05);
    command(0xB301, 0x05);
    command(0xB302, 0x05);
    // BT5CTR: BT5 Power Control for VGLX
    command(0xBA00, 0x34);
    command(0xBA01, 0x34);
    command(0xBA02, 0x34);
    // DPRSLCTR: Display Resolution Control
    command(0xB500, 0x0B);
    command(0xB501, 0x0B);
    command(0xB502, 0x0B);
    // SETVGP: Setting VGMP and VGSP Voltage
    command(0xBC00, 0X00);
    command(0xBC01, 0xA3);
    command(0xBC02, 0X00);
    // SETVGN: Setting VGMN and VGSN Voltage
    command(0xBD00, 0x00);
    command(0xBD01, 0xA3);
    command(0xBD02, 0x00);
    // SETVCMOFF: Setting VCOM Offset Voltage
    command(0xBE00, 0x00);
    command(0xBE01, 0x63);
    // GMRCTR1: Setting Gamma 2.2 Correction for Red (Positive)
    command(0xD100, 0x00);
    command(0xD101, 0x37);
    command(0xD102, 0x00);
    command(0xD103, 0x52);
    command(0xD104, 0x00);
    command(0xD105, 0x7B);
    command(0xD106, 0x00);
    command(0xD107, 0x99);
    command(0xD108, 0x00);
    command(0xD109, 0xB1);
    command(0xD10A, 0x00);
    command(0xD10B, 0xD2);
    command(0xD10C, 0x00);
    command(0xD10D, 0xF6);
    command(0xD10E, 0x01);
    command(0xD10F, 0x27);
    command(0xD110, 0x01);
    command(0xD111, 0x4E);
    command(0xD112, 0x01);
    command(0xD113, 0x8C);
    command(0xD114, 0x01);
    command(0xD115, 0xBE);
    command(0xD116, 0x02);
    command(0xD117, 0x0B);
    command(0xD118, 0x02);
    command(0xD119, 0x48);
    command(0xD11A, 0x02);
    command(0xD11B, 0x4A);
    command(0xD11C, 0x02);
    command(0xD11D, 0x7E);
    command(0xD11E, 0x02);
    command(0xD11F, 0xBC);
    command(0xD120, 0x02);
    command(0xD121, 0xE1);
    command(0xD122, 0x03);
    command(0xD123, 0x10);
    command(0xD124, 0x03);
    command(0xD125, 0x31);
    command(0xD126, 0x03);
    command(0xD127, 0x5A);
    command(0xD128, 0x03);
    command(0xD129, 0x73);
    command(0xD12A, 0x03);
    command(0xD12B, 0x94);
    command(0xD12C, 0x03);
    command(0xD12D, 0x9F);
    command(0xD12E, 0x03);
    command(0xD12F, 0xB3);
    command(0xD130, 0x03);
    command(0xD131, 0xB9);
    command(0xD132, 0x03);
    command(0xD133, 0xC1);
    // GMGCTR1: Setting Gamma 2.2 Correction for Green (Positive)
    command(0xD200, 0x00);
    command(0xD201, 0x37);
    command(0xD202, 0x00);
    command(0xD203, 0x52);
    command(0xD204, 0x00);
    command(0xD205, 0x7B);
    command(0xD206, 0x00);
    command(0xD207, 0x99);
    command(0xD208, 0x00);
    command(0xD209, 0xB1);
    command(0xD20A, 0x00);
    command(0xD20B, 0xD2);
    command(0xD20C, 0x00);
    command(0xD20D, 0xF6);
    command(0xD20E, 0x01);
    command(0xD20F, 0x27);
    command(0xD210, 0x01);
    command(0xD211, 0x4E);
    command(0xD212, 0x01);
    command(0xD213, 0x8C);
    command(0xD214, 0x01);
    command(0xD215, 0xBE);
    command(0xD216, 0x02);
    command(0xD217, 0x0B);
    command(0xD218, 0x02);
    command(0xD219, 0x48);
    command(0xD21A, 0x02);
    command(0xD21B, 0x4A);
    command(0xD21C, 0x02);
    command(0xD21D, 0x7E);
    command(0xD21E, 0x02);
    command(0xD21F, 0xBC);
    command(0xD220, 0x02);
    command(0xD221, 0xE1);
    command(0xD222, 0x03);
    command(0xD223, 0x10);
    command(0xD224, 0x03);
    command(0xD225, 0x31);
    command(0xD226, 0x03);
    command(0xD227, 0x5A);
    command(0xD228, 0x03);
    command(0xD229, 0x73);
    command(0xD22A, 0x03);
    command(0xD22B, 0x94);
    command(0xD22C, 0x03);
    command(0xD22D, 0x9F);
    command(0xD22E, 0x03);
    command(0xD22F, 0xB3);
    command(0xD230, 0x03);
    command(0xD231, 0xB9);
    command(0xD232, 0x03);
    command(0xD233, 0xC1);
    // GMBCTR1: Setting Gamma 2.2 Correction for Blue (Positive)
    command(0xD300, 0x00);
    command(0xD301, 0x37);
    command(0xD302, 0x00);
    command(0xD303, 0x52);
    command(0xD304, 0x00);
    command(0xD305, 0x7B);
    command(0xD306, 0x00);
    command(0xD307, 0x99);
    command(0xD308, 0x00);
    command(0xD309, 0xB1);
    command(0xD30A, 0x00);
    command(0xD30B, 0xD2);
    command(0xD30C, 0x00);
    command(0xD30D, 0xF6);
    command(0xD30E, 0x01);
    command(0xD30F, 0x27);
    command(0xD310, 0x01);
    command(0xD311, 0x4E);
    command(0xD312, 0x01);
    command(0xD313, 0x8C);
    command(0xD314, 0x01);
    command(0xD315, 0xBE);
    command(0xD316, 0x02);
    command(0xD317, 0x0B);
    command(0xD318, 0x02);
    command(0xD319, 0x48);
    command(0xD31A, 0x02);
    command(0xD31B, 0x4A);
    command(0xD31C, 0x02);
    command(0xD31D, 0x7E);
    command(0xD31E, 0x02);
    command(0xD31F, 0xBC);
    command(0xD320, 0x02);
    command(0xD321, 0xE1);
    command(0xD322, 0x03);
    command(0xD323, 0x10);
    command(0xD324, 0x03);
    command(0xD325, 0x31);
    command(0xD326, 0x03);
    command(0xD327, 0x5A);
    command(0xD328, 0x03);
    command(0xD329, 0x73);
    command(0xD32A, 0x03);
    command(0xD32B, 0x94);
    command(0xD32C, 0x03);
    command(0xD32D, 0x9F);
    command(0xD32E, 0x03);
    command(0xD32F, 0xB3);
    command(0xD330, 0x03);
    command(0xD331, 0xB9);
    command(0xD332, 0x03);
    command(0xD333, 0xC1);
    // GMRCTR2: Setting Gamma 2.2 Correction for Red (Negative)
    command(0xD400, 0x00);
    command(0xD401, 0x37);
    command(0xD402, 0x00);
    command(0xD403, 0x52);
    command(0xD404, 0x00);
    command(0xD405, 0x7B);
    command(0xD406, 0x00);
    command(0xD407, 0x99);
    command(0xD408, 0x00);
    command(0xD409, 0xB1);
    command(0xD40A, 0x00);
    command(0xD40B, 0xD2);
    command(0xD40C, 0x00);
    command(0xD40D, 0xF6);
    command(0xD40E, 0x01);
    command(0xD40F, 0x27);
    command(0xD410, 0x01);
    command(0xD411, 0x4E);
    command(0xD412, 0x01);
    command(0xD413, 0x8C);
    command(0xD414, 0x01);
    command(0xD415, 0xBE);
    command(0xD416, 0x02);
    command(0xD417, 0x0B);
    command(0xD418, 0x02);
    command(0xD419, 0x48);
    command(0xD41A, 0x02);
    command(0xD41B, 0x4A);
    command(0xD41C, 0x02);
    command(0xD41D, 0x7E);
    command(0xD41E, 0x02);
    command(0xD41F, 0xBC);
    command(0xD420, 0x02);
    command(0xD421, 0xE1);
    command(0xD422, 0x03);
    command(0xD423, 0x10);
    command(0xD424, 0x03);
    command(0xD425, 0x31);
    command(0xD426, 0x03);
    command(0xD427, 0x5A);
    command(0xD428, 0x03);
    command(0xD429, 0x73);
    command(0xD42A, 0x03);
    command(0xD42B, 0x94);
    command(0xD42C, 0x03);
    command(0xD42D, 0x9F);
    command(0xD42E, 0x03);
    command(0xD42F, 0xB3);
    command(0xD430, 0x03);
    command(0xD431, 0xB9);
    command(0xD432, 0x03);
    command(0xD433, 0xC1);
    // GMGCTR2: Setting Gamma 2.2 Correction for Green (Negative)
    command(0xD500, 0x00);
    command(0xD501, 0x37);
    command(0xD502, 0x00);
    command(0xD503, 0x52);
    command(0xD504, 0x00);
    command(0xD505, 0x7B);
    command(0xD506, 0x00);
    command(0xD507, 0x99);
    command(0xD508, 0x00);
    command(0xD509, 0xB1);
    command(0xD50A, 0x00);
    command(0xD50B, 0xD2);
    command(0xD50C, 0x00);
    command(0xD50D, 0xF6);
    command(0xD50E, 0x01);
    command(0xD50F, 0x27);
    command(0xD510, 0x01);
    command(0xD511, 0x4E);
    command(0xD512, 0x01);
    command(0xD513, 0x8C);
    command(0xD514, 0x01);
    command(0xD515, 0xBE);
    command(0xD516, 0x02);
    command(0xD517, 0x0B);
    command(0xD518, 0x02);
    command(0xD519, 0x48);
    command(0xD51A, 0x02);
    command(0xD51B, 0x4A);
    command(0xD51C, 0x02);
    command(0xD51D, 0x7E);
    command(0xD51E, 0x02);
    command(0xD51F, 0xBC);
    command(0xD520, 0x02);
    command(0xD521, 0xE1);
    command(0xD522, 0x03);
    command(0xD523, 0x10);
    command(0xD524, 0x03);
    command(0xD525, 0x31);
    command(0xD526, 0x03);
    command(0xD527, 0x5A);
    command(0xD528, 0x03);
    command(0xD529, 0x73);
    command(0xD52A, 0x03);
    command(0xD52B, 0x94);
    command(0xD52C, 0x03);
    command(0xD52D, 0x9F);
    command(0xD52E, 0x03);
    command(0xD52F, 0xB3);
    command(0xD530, 0x03);
    command(0xD531, 0xB9);
    command(0xD532, 0x03);
    command(0xD533, 0xC1);
    // GMBCTR2: Setting Gamma 2.2 Correction for Blue (Negative)
    command(0xD600, 0x00);
    command(0xD601, 0x37);
    command(0xD602, 0x00);
    command(0xD603, 0x52);
    command(0xD604, 0x00);
    command(0xD605, 0x7B);
    command(0xD606, 0x00);
    command(0xD607, 0x99);
    command(0xD608, 0x00);
    command(0xD609, 0xB1);
    command(0xD60A, 0x00);
    command(0xD60B, 0xD2);
    command(0xD60C, 0x00);
    command(0xD60D, 0xF6);
    command(0xD60E, 0x01);
    command(0xD60F, 0x27);
    command(0xD610, 0x01);
    command(0xD611, 0x4E);
    command(0xD612, 0x01);
    command(0xD613, 0x8C);
    command(0xD614, 0x01);
    command(0xD615, 0xBE);
    command(0xD616, 0x02);
    command(0xD617, 0x0B);
    command(0xD618, 0x02);
    command(0xD619, 0x48);
    command(0xD61A, 0x02);
    command(0xD61B, 0x4A);
    command(0xD61C, 0x02);
    command(0xD61D, 0x7E);
    command(0xD61E, 0x02);
    command(0xD61F, 0xBC);
    command(0xD620, 0x02);
    command(0xD621, 0xE1);
    command(0xD622, 0x03);
    command(0xD623, 0x10);
    command(0xD624, 0x03);
    command(0xD625, 0x31);
    command(0xD626, 0x03);
    command(0xD627, 0x5A);
    command(0xD628, 0x03);
    command(0xD629, 0x73);
    command(0xD62A, 0x03);
    command(0xD62B, 0x94);
    command(0xD62C, 0x03);
    command(0xD62D, 0x9F);
    command(0xD62E, 0x03);
    command(0xD62F, 0xB3);
    command(0xD630, 0x03);
    command(0xD631, 0xB9);
    command(0xD632, 0x03);
    command(0xD633, 0xC1);
    // MAUCCTR: Manufacture Command Set
    command(0xF000, 0x55);
    command(0xF001, 0xAA);
    command(0xF002, 0x52);
    command(0xF003, 0x08); // enable page 0
    command(0xF004, 0x00);
    // RGBCTR: RGB Interface Signals Control
    command(0xB000, 0x08);
    command(0xB001, 0x05);
    command(0xB002, 0x02);
    command(0xB003, 0x05);
    command(0xB004, 0x02);
    // SDHDTCTR: Source Output Data Hold Time Control
    command(0xB600, 0x08);
    // DPRSLCTR: Display Resolution Control
    command(0xB500, 0x50); // 480RGB x 800
    // GSEQCTR: EQ Control Function for Gate Signals
    command(0xB700, 0x00);
    command(0xB701, 0x00);
    // SDEQCTR: EQ Control Function for Source Driver
    command(0xB800, 0x01);
    command(0xB801, 0x05);
    command(0xB802, 0x05);
    command(0xB803, 0x05);
    // INVCTR: Inversion Driving Control
    command(0xBC00, 0x00);
    command(0xBC01, 0x00);
    command(0xBC02, 0x00);
    // unknown
    command(0xCC00, 0x03);
    command(0xCC01, 0x00);
    command(0xCC02, 0x00);
    // DPFRCTR1: Display Timing Control in Normal / Idle Off Mode
    command(0xBD00, 0x01);
    command(0xBD01, 0x84);
    command(0xBD02, 0x07);
    command(0xBD03, 0x31);
    command(0xBD04, 0x00);
    // unknown
    command(0xBA00, 0x01);
    // MAUCCTR: Manufacture Command Set
    command(0xFF00, 0xAA);
    command(0xFF01, 0x55);
    command(0xFF02, 0x25);
    command(0xFF03, 0x01); // disable
    // TEON: Tearing Effect Line ON
    command(0x3500, 0x00);
    // MADCTL: Memory Data Access Control
    command(0x3600, orientation == Orientation::PORTRAIT ? 0x00 : 0x60);
    // COLMOD: Interface Pixel Format
    command(0x3A00, 0x55); // 16-bit/pixel
    // SLPOUT: Sleep Out
    command(0x1100);
    _delay_ms(120);
    // DISPON: Display On
    command(0x2900);
    // RAMWR: Memory Write
    command(0x2C00);
}
